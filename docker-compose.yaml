version: '3'

services:
  redis:
    image: redis:latest
    restart: unless-stopped

  flask_app:
    build: 
      context: ./
      dockerfile: Dockerfile.production
    ports:
      - "8443:8443"
      - "8000:8000"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - db-data:/data
    environment:
      - FLASK_SECRET=${FLASK_SECRET}
      - RECAPTCHA_PUBLIC_KEY=${RECAPTCHA_PUBLIC_KEY}
      - RECAPTCHA_PRIVATE_KEY=${RECAPTCHA_PRIVATE_KEY}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - redis
      - sqlite_db
    restart: unless-stopped

  celery:
    build: 
      context: ./
      dockerfile: Dockerfile.production
    volumes:
      - .:/src
      - db-data:/data
    container_name: cel01
    command: celery -A app.celery worker -l info
    environment:
      - FLASK_SECRET=${FLASK_SECRET}
      - RECAPTCHA_PUBLIC_KEY=${RECAPTCHA_PUBLIC_KEY}
      - RECAPTCHA_PRIVATE_KEY=${RECAPTCHA_PRIVATE_KEY}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - TEXMFCACHE=/home/appuser/.texlive
      - TEXMFVAR=/home/appuser/.texlive
      - LUATEX_CACHE_DIR=/tmp/luatex-cache
      - TMPDIR=/tmp/armymarkdown
    links:
      - redis
    restart: unless-stopped

  sqlite_db:
    build: ./db
    volumes:
      - db-data:/data

  proxy:
    build: ./proxy
    ports:
      - "80:80"
      - "443:443"
    links:
      - flask_app
    depends_on:
      - flask_app
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
    restart: unless-stopped

volumes:
  db-data: